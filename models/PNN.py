# !/usr/bin/env python
# -*- coding:utf-8 -*-
# @Time  : 2018.
# @Author : 张明阳
# @Email : mingyang.zhang@ushow.media


"""
PNN（Product-based Neural Network，基于特征交叉的神经网络）是一种结合了传统神经网络（FNN, Feedforward Neural Network）和特征交叉（Feature Interaction）的算法，旨在提升模型的表达能力，尤其是在特征间存在交互关系时。
PNN的核心原理是 通过显式建模特征间的交互 来捕捉它们的潜在关系。这些交互关系在很多场景中对于最终预测的影响非常大，尤其是在点击率预测（CTR, Click-Through Rate）等任务中。
PNN的基本原理：
1. 特征嵌入： 在PNN中，离散型的类别特征通常会通过嵌入（Embedding）映射到一个连续的低维空间。这些嵌入向量能够捕捉到不同类别特征之间的关系。比如年龄、性别、物品类别等会被映射到固定维度的向量。
2. 特征交叉（Feature Interaction）： 在PNN中，最显著的创新点就是显式地构建了不同特征之间的交互特征。这是通过计算每对特征的乘积（即特征交叉）来实现的。特征交叉可以帮助捕捉到特征之间非线性关系，并且这些关系可能对最终预测结果起到关键作用。
3. FNN（全连接神经网络）部分： 这部分用于处理原始特征，即将通过嵌入层得到的特征输入到一个简单的全连接神经网络中进行学习。FNN网络通常包括多个全连接层和非线性激活函数（如ReLU）。
4. 组合
5. 论文原文是内积 + 外积 + 原特征：Z部指的是内积；P部分指的是外积；

老师认为外积需要先构造一个中间的矩阵W：
第一：不同维度有不同的权重；
第二：相比于内积，外积可以进行不同维度的交叉；
老师认为外积的结果也是一个标量，也是一个数字；
"""

