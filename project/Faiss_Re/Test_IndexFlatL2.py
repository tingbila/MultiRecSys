# !/usr/bin/env python
# -*- coding:utf-8 -*-
# @Time  : 2018.
# @Author : 张明阳
# @Email : mingyang.zhang@ushow.media

import faiss
import numpy as np

# 1. 生成随机向量数据，模拟一个向量库
# 这里生成 10000 个向量，每个向量维度为 128，数据类型为 float32（Faiss要求）
vectors = np.random.rand(10000, 128).astype('float32')

# 2. 构建精确搜索索引：IndexFlatL2，基于欧氏距离的全量扫描索引
# 该索引不做压缩或聚类，查询时会遍历所有向量，计算精确距离
index = faiss.IndexFlatL2(128)

# 3. 将向量数据添加到索引中，完成索引构建
index.add(vectors)

# 4. 构建多个查询向量（这里是5个），维度需与索引一致
query = np.random.rand(5, 128).astype('float32')

# 5. 执行查询，寻找每个查询向量最近的 Top-5 向量
# 返回两个矩阵：
# D: 距离矩阵，形状为 (5, 5)，表示5个查询向量分别与对应Top-5向量的L2距离
# I: 索引矩阵，形状为 (5, 5)，表示5个查询向量对应Top-5向量在数据库中的索引位置
D, I = index.search(query, k=5)

# 6. 打印查询结果
print("Top-5 相似向量的索引位置（每行对应一个查询向量）：\n", I)
print("对应的 L2 距离（每行对应一个查询向量）：\n", D)


"""
Top-5 相似向量的索引位置（每行对应一个查询向量）：
 [[4026 9586 2770 4022 8337]
 [3597 5300 7417 7108 8808]
 [5223 5829 6416 6228 2670]
 [1437 9420 3957 4346 7828]
 [8602 7471 5730 2192 4838]]
对应的 L2 距离（每行对应一个查询向量）：
 [[13.093095 13.302464 13.650324 14.35722  14.483744]
 [14.002226 14.600532 15.262661 15.308783 15.320586]
 [14.634881 15.460443 15.638094 15.747711 15.806717]
 [13.258893 13.788662 13.836455 13.899824 13.998289]
 [13.964346 14.332386 14.384889 14.421431 14.512134]]
"""