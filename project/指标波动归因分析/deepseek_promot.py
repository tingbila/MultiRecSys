# -*- coding: utf-8 -*-
import argparse
from openai import OpenAI
from pyhive import hive
import pandas as pd
import json
import requests



def prompt_con():
    prompt_system = """
    你是一名数据分析专家，擅长使用 Adtributor 算法进行归因分析和指标波动解读。
    我将给你不同维度的归因指标数据，请你根据数据直接给出简明扼要的结论，
    重点总结各维度及元素对整体波动的影响大小，避免解释算法细节，只输出结论和排序。
    """

    prompt_user = """
    请根据以下数据，基于 Adtributor 归因算法的思想，结合数据给出指标波动结论。：

    dim,element,before,after,pre_sum,aft_sum,p,q,surprise,surprise_rank,ep,ep_sum,lag_ep_sum,surprise_sum,overall_dim_surprise_rank
    channel,organic,1624032,1656180,3056814,3121483,0.531282570677,0.530574730024,5.1231e-08,12,0.49711608344,0.888617421021,0.391501337581,1.054355e-06,1
    channel,googleadwords_int,859705,885023,3056814,3121483,0.281242169134,0.28352645201,1.003124e-06,1,0.391501337581,0.391501337581,0.391501337581,1.054355e-06,1
    region,Area_IN,1119484,1143835,3056814,3121483,0.366225750078,0.36643960579,6.777e-09,24,0.376548268877,0.376548268877,0.376548268877,6.777e-09,2

    请完成以下任务：
    1. 按 surprise_sum 排序，指出哪个维度对整体影响最大；
    2. 对每个维度内的元素，按影响大小排序。

    示例格式：
    【指标波动结论】
    今天整体指标增加了(降低了) X（用aft_sum-pre_sum），原因如下:
    1. 维度影响排序：A维度（surprise_sum = X）> B维度（surprise_sum = X）
    2. 维度内元素排序：
       - 渠道维度：  a1（surprise 0.007697）> a2（surprise 0.001973）> a3（surprise 0.000725）
       - 新老客维度：b1（surprise 0.000557）>  b2（surprise 0.000426）
    注意：只输出结论，不要解释算法或过程。
    """

    return [
        {"role": "system", "content": prompt_system},
        {"role": "user", "content": prompt_user}
    ]



def send_messages(messages):
    headers = {"Content-Type": "application/json; charset=utf-8"}
    client = OpenAI(
        api_key="xxxxx",
        base_url="xxxxx",
    )

    completion = client.chat.completions.create(
        model="deepseek-r1",  # 确认模型名称是否正确
        messages=messages,
        reasoning_effort="high",  # 确认推理努力程度
        stream=False  # 确认是否支持 stream 参数
    )

    print("messages内容：")
    print(messages)
    print("----------------------------------------------=------------------------------------------------------------")
    print("----------------------------------------------=------------------------------------------------------------")
    print("思考过程：")
    print(completion.choices[0].message.reasoning_content)
    print("----------------------------------------------=------------------------------------------------------------")
    print("----------------------------------------------=------------------------------------------------------------")
    print("最终答案：")
    openai_messages  = completion.choices[0].message.content
    cleaned_json_str = openai_messages.replace("```json", "").replace("```", "").strip()
    print("----------------------------------------------1------------------------------------------------------------")
    print(cleaned_json_str)





if __name__ == '__main__':
    messages = prompt_con()
    send_messages(messages)


"""
[hadoop()@sg-prod-datacentersg-emrrouter-1 zmy]$ /home/hadoop/hao.liu/python3/bin/python3.12   bb.py
messages内容：
[{'role': 'system', 'content': '\n    你是一名数据分析专家，擅长使用 Adtributor 算法进行归因分析和指标波动解读。\n    我将给你不同维度的归因指标数据，请你根据数据直接给出简明扼要的结论，\n    重点总结各维度及元素对整体波动的影响大小，避免解释算法细节，只输出结论和排序。\n    '}, {'role': 'user', 'content': '\n    请根据以下数据，基于 Adtributor 归因算法的思想，结合数据给出指标波动结论。：\n\n    dim    element  surprise   surprise_rank  ep        ep_sum     surprise_sum  overall_dim_surprise_rank\n    渠道    A        0.001973   2              0.373333  0.64       0.010395      1\n    渠道    C        0.000725   4              0.36      1          0.010395      1\n    渠道    B        0.007697   1              0.266667  0.266667   0.010395      1\n    新老客  老客     0.000426   2               0.666667  1          0.000983      2\n    新老客  新客     0.000557   1               0.333333  0.333333   0.000983      2\n\n    请完成以下任务：\n    1. 按 surprise_sum 排序，指出哪个维度对整体影响最大；\n    2. 对每个维度内的元素，按影响大小排序。\n\n    示例格式：\n    【指标波动结论】\n    1. 维度影响排序：A维度（surprise_sum = X）> B维度（surprise_sum = X）\n    2. 维度内元素排序：\n       - 渠道维度：  a1（surprise 0.007697）> a2（surprise 0.001973）> a3（surprise 0.000725）\n       - 新老客维度：b1（surprise 0.000557）>  b2（surprise 0.000426）\n    注意：只输出结论，不要解释算法或过程。\n    '}]
----------------------------------------------=------------------------------------------------------------
----------------------------------------------=------------------------------------------------------------
思考过程：
嗯，首先我要看看用户给的这些数据。任务是使用Adtributor算法来分析指标波动，但不需要讲算法细节，只要结论和排序。数据里有渠道和新老客两个维度，每个维度下的元素对应的surprise值和相关排名。还有ep、ep_sum、surprise_sum这些字段。
首先第一个任务是按surprise_sum排序，找出哪个维度对整体影响最大。看数据里的surprise_sum，渠道维度是0.010395，新老客是0.000983。显然渠道的surprise_sum更大，所以渠道维度影响更大。
接下来第二个任务是对每个维度内的元素按影响大小排序。维度内的元素需要根据各自的surprise值来排。渠道维度下有A、C、B三个元素，对应的surprise值分别是0.001973，0.000725，0.007697。比较这三个，最大的B的0.007697，然后是A，最后是C。所以渠道维度内的排序应该是B > A > C。
新老客维度有老客和新客，surprise分别是0.000426和0.000557。显然新客的surprise更高，所以新客排第一，老客第二。
检查一下有没有哪里弄错。比如注意surprise_rank这个列，渠道中的B是排第一，对应的surprise也是最大的0.007697，没问题。同样新老客维度里新客的surprise_rank是1，对得上。这样得出的结论应该准确。整体的话，按照用户的示例格式来输出结果，确认数据没看错的话就完成任务了。

----------------------------------------------=------------------------------------------------------------
----------------------------------------------=------------------------------------------------------------
最终答案：
----------------------------------------------1------------------------------------------------------------
【指标波动结论】  
1. 维度影响排序：渠道维度（surprise_sum = 0.010395）> 新老客维度（surprise_sum = 0.000983）  
2. 维度内元素排序：  
   - 渠道维度：B（surprise 0.007697）> A（surprise 0.001973）> C（surprise 0.000725）  
   - 新老客维度：新客（surprise 0.000557）> 老客（surprise 0.000426）
"""

"""
思考过程：
嗯，用户给了一个关于Adtributor归因分析的任务。需要根据提供的维度数据，总结指标波动的原因。首先，我需要理解用户提供的数据结构。看到各个维度的surprise_sum和surprise_rank，这些是关键指标。

首先用户的任务有两个部分：按surprise_sum排序维度，然后每个维度内元素按影响排序。数据中有三个行，涉及两个维度：channel和region。注意看数据中的dim列。

检查数据，channel维度有两行，而region有一行。在surprise_sum列，channel维度的总和是1.054355e-06，而region是6.777e-09。所以channel的surprise_sum明显更大，说明对整体影响最大。虽然数据中有两行属于channel，它们的surprise_sum之和是总和，因为在channel维度下的surprise_sum是合并计算的。根据示例，维度排序应该比较各个维度的surprise_sum的总和。

接下来看维度内元素排序。在channel维度下有两个元素：organic和googleadwords_int。它们的surprise值分别是5.1231e-08和1.003124e-06。按照数值，googleadwords_int的surprise更高，所以应该排在前面。但要注意surprise_rank的值，第一个元素的rank是12，而第二个的rank是1，说明第二个元素的影响更大。

然后region维度的元素是Area_IN，surprise是6.777e-09，因为只有一个元素，所以直接列出。

最后整体指标的变化是aft_sum - pre_sum = 3121483 - 3056814 = 64669，即增加了64669。

需要注意的是，用户在示例中用了科学计数法，所以在结论中保持同样的格式。并且用户要求只输出结论，不需要解释过程。因此需要严格按照用户提供的格式，用示例的结构来组织答案。

----------------------------------------------=------------------------------------------------------------
----------------------------------------------=------------------------------------------------------------
最终答案：
----------------------------------------------1------------------------------------------------------------
【指标波动结论】  
今天整体指标增加了64669（3121483-3056814），原因如下:  
1. 维度影响排序：channel维度（surprise_sum = 1.054355e-06）> region维度（surprise_sum = 6.777e-09）  
2. 维度内元素排序：  
   - channel维度：googleadwords_int（surprise 1.003124e-06）> organic（surprise 5.1231e-08）  
   - region维度：Area_IN（surprise 6.777e-09）
"""

"""
----------------------------------------------=------------------------------------------------------------
思考过程：
嗯，让我来看看用户给的数据。用户希望根据Adtributor算法进行归因分析，找出哪个维度和元素对指标波动影响最大。首先，我需要理解这些数

数据表里的dim是维度，比如app_version和language。每个维度下的元素比如8.86.4、9.8.1属于app_version，hi和en属于language。各列的befp和q可能分别是在变化前后的比例，surprise和surprise_rank代表元素的贡献度及排名。ep可能是element的贡献分数，ep_sum和surprise_sum应

用户需要按surprise_sum排序维度，然后每个维度内按surprise排序元素。在示例中，整体变化是aft_sum - pre_sum，这里计算得3047331 - 31

接下来看维度部分。两个维度app_version和language。根据提供的surprise_sum数据，app_version的surprise_sum是0.000590605353，而langu应该转换）。那按照surprise_sum来看，app_version明显更大，所以维度排序是app_version>language。

然后维度内的元素排序。app_version中的两个元素：8.86.4的surprise是0.000207，9.8.1是0.000383，但注意它们的surprise_rank是2和1，这应该排在前面。所以app_version内的元素排序是9.8.1>8.86.4。

然后是language维度，包含hi和en。hi的surprise是1.09743e-07，rank21；而en的是2.38209e-07，rank14。数值上en的surprise更大，所以排序数值排序，不管rank。

所以最终的结论应该是：整体指标下降72003，维度排序app_version第一，language第二；每个维度内的元素按surprise值排序，app_version中如用户数据中的app_version的两个元素surprise值分别为0.000207和0.000383，那实际上9.8.1的surprise更大，应排在前面。language中en的s

最后，用户需要按示例格式输出，所以注意单位是否正确，特别是surprise_sum的数值可能需要正确转换，比如第三行的surprise_sum是3.47952度排序正确。维度内的元素按各自的surprise值排序，不管surprise_rank的数值，可能以数值大小为准。

----------------------------------------------=------------------------------------------------------------
----------------------------------------------=------------------------------------------------------------
最终答案：
----------------------------------------------1------------------------------------------------------------
【指标波动结论】
今天整体指标降低了72003（3047331-3119334），原因如下:
1. 维度影响排序：app_version（surprise_sum = 0.000591）> language（surprise_sum = 0.000000347952）
2. 维度内元素排序：
   - app_version维度：9.8.1（surprise 0.000383）> 8.86.4（surprise 0.000207）
   - language维度：en（surprise 0.000000238209）> hi（surprise 0.000000109743）

"""